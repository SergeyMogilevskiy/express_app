{"version":3,"sources":["ThemeContainer.jsx","redux/reducers/products.js","redux/reducers/errors.js","redux/reducers/cart.js","redux/reducers/index.js","redux/actions/actionsType.js","redux/actions/errors.js","routes/Layout/ErrorSnackbar/SnackbarContnent.jsx","routes/Layout/ErrorSnackbar/ErrorSnackbar.jsx","routes/Layout/ErrorSnackbar/ErrorSnackbarContainer.jsx","reselectors/cartProducts.js","routes/Layout/Cart/Cart.jsx","routes/Layout/Cart/CartContainer.jsx","routes/Layout/Header.jsx","routes/Layout/Layout.jsx","routes/ProductList/ProductListItem.jsx","redux/actions/cart.js","routes/ProductList/ProductListItemContainer.jsx","routes/ProductList/ProductsList.jsx","redux/actions/products.js","routes/ProductList/ProductsListContainer.jsx","routes/Product/Product.jsx","routes/Product/ProductContainer.jsx","routes/CartProducts/CartProductsItem.jsx","routes/CartProducts/CartProductsItemContainer.jsx","routes/CartProducts/CartProducts.jsx","routes/CartProducts/CartProductsContainer.jsx","routes/Routes.jsx","App.js","redux/store.js","serviceWorker.js","index.js"],"names":["createMuiTheme","palette","primary","green","typography","useNextVariants","initialState","totalProducts","productsList","product","page","limit","fetchError","toShow","message","productsInCart","combineReducers","products","state","arguments","length","undefined","action","type","payload","Object","objectSpread","concat","toConsumableArray","Number","errors","actison","cart","newProductsCart","find","value","id","map","item","count","push","removedProductFromCart","filter","editedProductsCart","errorFetch","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","withStyles","theme","backgroundColor","dark","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","display","alignItems","props","classes","className","onClose","variant","other","objectWithoutProperties","Icon","react_default","a","createElement","SnackbarContent_default","assign","classNames","aria-describedby","IconButton_default","key","aria-label","color","close","onClick","Close_default","ErrorSnackbar","closeError","_this","resetFetchError","this","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","SnackbarContnent","Component","margin","mapDispatchToProps","connect","totalCountCartProducts","createSelector","reduce","sum","_ref","totalAmountCartProducts","_ref2","price","badge","top","right","border","grey","totalCount","Link","to","Badge_default","badgeContent","ShoppingCart_default","Cart","Header","header","Grid_default","container","direction","justify","xs","Paper_default","paper","NavLink","activeClassName","CartContainer","flexGrow","padding","maxWidth","textAlign","text","secondary","Layout","children","react","Layout_Header","ErrorSnackbarContainer","ProductsList","buyProduct","addToCart","_this$props","sm","md","lg","Card_default","card","CardMedia_default","cardMedia","image","img","title","CardActions_default","Typography_default","currency","Button_default","size","React","height","flexDirection","paddingTop","cardContent","dispatch","ProductListItem","componentDidMount","loadProducts","_this$props2","layout","cardGrid","ProductListItemContainer","disabled","defineProperty","width","marginLeft","breakpoints","up","addProduct","fetchProductById","fetch","then","response","ok","Error","statusText","json","catch","headers","get","setPage","fetchProductsList","ProductList","Product","showProduct","match","params","itemId","root","ButtonBase_default","alt","src","gutterBottom","author","desc","withTheme","getState","CartProductsItem","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","removeFromCart","removeOneProduct","removeOneFromCart","inherits","createClass","maxHeight","CartProducts","totalAmount","align","CartProductsItemContainer","notFound","Router","Switch","Route","path","component","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","App","BrowserRouter","core_styles","es","Layout_Layout","Routes","Boolean","window","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e2377ed.chunk.js","sourcesContent":["import {\n  createMuiTheme\n} from \"@material-ui/core/styles\";\nimport green from \"@material-ui/core/colors/green\";\n\n\nexport default createMuiTheme({\n  palette: {\n    primary: green\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\n","import {\n  FETCH_RPODUCTS_SUCCESSFUL,\n  FETCH_RPODUCT_BY_ID,\n  SET_TOTAL_PRODUCTS,\n  SET_PAGE,\n  SET_LIMIT\n} from \"../actions/actionsType\";\n\nconst initialState = {\n  totalProducts: 0,\n  productsList: [],\n  product: {},\n  page: 1,\n  limit: 4\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case FETCH_RPODUCTS_SUCCESSFUL:\n      return {\n        ...state,\n        productsList: [...state.productsList, ...payload]\n      };\n\n    case FETCH_RPODUCT_BY_ID:\n      return {\n        ...state,\n        product: payload\n      };\n\n    case SET_TOTAL_PRODUCTS:\n      return {\n        ...state,\n        totalProducts: Number(payload)\n      };\n\n    case SET_PAGE:\n      return {\n        ...state,\n        page: payload\n      };\n\n    case SET_LIMIT:\n      return {\n        ...state,\n        limit: payload.limit\n      };\n    default:\n      return state;\n  }\n};\n","import { FETCH_REQUEST_ERROR, RESET_FETCH_ERROR } from \"../actions/actionsType\";\n\nconst initialState = {\n  fetchError: {\n    toShow: false,\n    message: \"\"\n  }\n};\n\nexport default (state = initialState, actison) => {\n  const { type, payload } = actison;\n\n  switch (type) {\n    case FETCH_REQUEST_ERROR:\n      return {\n        ...state,\n        fetchError: {\n          toShow: true,\n          message: payload\n        }\n      };\n\n    case RESET_FETCH_ERROR:\n      return {\n        ...state,\n        fetchError: {\n          toShow: false,\n          message: \"\"\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_TO_CART,\n  REMOVE_FROM_CART,\n  REMOVE_ONE_FROM_CART\n} from \"../actions/actionsType\";\n\nconst initialState = {\n  productsInCart: []\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ADD_TO_CART:\n      let newProductsCart = [...state.productsInCart];\n\n      if (newProductsCart.find(value => value.product.id === payload.id)) {\n        newProductsCart = newProductsCart.map(item => {\n          if (item.product.id === payload.id) {\n            item.count++;\n          }\n          return item;\n        });\n      } else {\n        newProductsCart.push({\n          product: payload,\n          count: 1\n        });\n      }\n\n      return {\n        ...state,\n        productsInCart: newProductsCart\n      };\n\n    case REMOVE_FROM_CART:\n      const removedProductFromCart = state.productsInCart.filter(value => {\n        return value.product.id !== payload.id;\n      });\n\n      return {\n        ...state,\n        productsInCart: removedProductFromCart\n      };\n\n    case REMOVE_ONE_FROM_CART:\n      const editCountProduct = state.productsInCart.map(item => {\n        if (item.product.id === payload.id) {\n          item.count--;\n        }\n        return item;\n      });\n      const editedProductsCart = editCountProduct.filter(value => {\n        return value.count !== 0;\n      });\n\n      return {\n        ...state,\n        productsInCart: editedProductsCart\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport products from \"./products\";\nimport errors from \"./errors\";\nimport cart from \"./cart\"\n\nexport default combineReducers({\n  products,\n  errors,\n  cart\n});\n","// Products ActionsType\nexport const FETCH_RPODUCTS_SUCCESSFUL = \"FETCH_RPODUCTS_SUCCESSFUL\";\nexport const SET_TOTAL_PRODUCTS = \"SET_TOTAL_PRODUCTS\";\nexport const SET_PAGE = \"SET_PAGE\";\nexport const SET_LIMIT = \"SET_LIMIT\";\nexport const FETCH_RPODUCT_BY_ID = \"FETCH_RPODUCT_BY_ID\";\n\n// Cart ActionsType\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const REMOVE_ONE_FROM_CART = \"REMOVE_ONE_FROM_CART\";\n\n// Error ActionsType\nexport const FETCH_REQUEST_ERROR = \"FETCH_REQUEST_ERROR\";\nexport const RESET_FETCH_ERROR = \"RESET_FETCH_ERROR\";\n","import { FETCH_REQUEST_ERROR, RESET_FETCH_ERROR } from \"./actionsType\";\n\nexport const errorFetch = message => {\n  return {\n    type: FETCH_REQUEST_ERROR,\n    payload: message\n  };\n};\n\nexport const resetFetchError = () => {\n  return {\n    type: RESET_FETCH_ERROR\n  };\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport green from \"@material-ui/core/colors/green\";\nimport amber from \"@material-ui/core/colors/amber\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n});\n\nfunction ErrorsSnackbar(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nErrorsSnackbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\n};\n\nexport default withStyles(styles)(ErrorsSnackbar);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport SnackbarContnent from \"./SnackbarContnent\";\n\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit\n  }\n});\n\nclass ErrorSnackbar extends Component {\n  closeError = () => {\n    this.props.resetFetchError();\n  };\n\n  render() {\n    const { fetchError } = this.props;\n\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        open={fetchError.toShow}\n        autoHideDuration={6000}\n        onClose={this.closeError}\n      >\n        <SnackbarContnent\n          onClose={this.closeError}\n          variant=\"error\"\n          message={fetchError.message}\n        />\n      </Snackbar>\n    );\n  }\n}\n\nErrorSnackbar.propTypes = {\n  fetchError: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ErrorSnackbar);\n","import { connect } from \"react-redux\";\n\nimport { resetFetchError } from \"../../../redux/actions/errors\";\nimport ErrorSnackbar from \"./ErrorSnackbar\";\n\nconst mapStateToProps = state => ({\n  fetchError: state.errors.fetchError\n});\n\nconst mapDispatchToProps = {\n  resetFetchError\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ErrorSnackbar);\n","import { createSelector } from \"reselect\";\n\nconst productsInCart = state => state.cart.productsInCart;\n\nexport const totalCountCartProducts = createSelector(\n  [productsInCart],\n  products => {\n    return products.reduce((sum, { count }) => {\n      return sum + count;\n    }, 0);\n  }\n);\n\nexport const totalAmountCartProducts = createSelector(\n  [productsInCart],\n  products => {\n    return products.reduce((sum, { product, count }) => {\n      return sum + product.price * count;\n    }, 0);\n  }\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = theme => ({\n  badge: {\n    top: 1,\n    right: -15,\n    border: `2px solid ${\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[900]\n    }`\n  }\n});\n\nfunction CustomizedBadge(props) {\n  const { classes, totalCount } = props;\n  return (\n    <Link to=\"/cart\">\n      <IconButton aria-label=\"Cart\">\n        <Badge\n          badgeContent={totalCount}\n          color=\"primary\"\n          classes={{ badge: classes.badge }}\n        >\n          <ShoppingCartIcon />\n        </Badge>\n      </IconButton>\n    </Link>\n  );\n}\n\nCustomizedBadge.propTypes = {\n  totalCount: PropTypes.number.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(CustomizedBadge);\n","import { connect } from \"react-redux\";\nimport { totalCountCartProducts} from \"../../../reselectors/cartProducts\"\n\nimport Cart from \"./Cart\";\n\nconst mapStateToProps = state => ({\n  totalCount: totalCountCartProducts(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(Cart);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport Cart from \"./Cart/CartContainer\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = theme => ({\n  header: {\n    flexGrow: 1,\n    padding: \"20px\",\n    backgroundColor: \"#4caf50\"\n  },\n  container: {\n    maxWidth: \"1000px\",\n    margin: \"0 auto\"\n  },\n  paper: {\n    padding: theme.spacing.unit * 1,\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    marginRight: \"20px\"\n  }\n});\n\nclass Header extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <header className={classes.header}>\n        <Grid\n          className={classes.container}\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid\n            item\n            xs={9}\n            container\n            direction=\"row\"\n          >\n            <Paper className={classes.paper}>\n              <NavLink to=\"/\" activeClassName=\"active\">\n                Home\n              </NavLink>\n            </Paper>\n            \n            <Paper className={classes.paper}>\n              <NavLink to=\"/products\" activeClassName=\"active\">\n                Products\n              </NavLink>\n            </Paper>\n          </Grid>\n\n          <Cart />\n        </Grid>\n      </header>\n    );\n  }\n}\n\nexport default withStyles(styles)(Header);\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ErrorSnackbar from \"./ErrorSnackbar/ErrorSnackbarContainer\";\nimport Header from \"./Header\";\n\nexport default class Layout extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <Fragment>\n        <Header />\n        <main>{children}</main>\n        <ErrorSnackbar />\n      </Fragment>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.element.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = () => ({\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  cardMedia: {\n    paddingTop: \"142%\"\n  },\n  cardContent: {\n    flexGrow: 1\n  }\n});\n\nclass ProductsList extends React.Component {\n  buyProduct = () => {\n    this.props.addToCart(this.props.product);\n  };\n\n  render() {\n    const { classes, product } = this.props;\n    return (\n      <Grid item key={product.id} sm={6} md={4} lg={3}>\n        <Card className={classes.card}>\n          <CardMedia\n            className={classes.cardMedia}\n            image={product.img}\n            title=\"Image title\"\n          />\n\n          <CardActions>\n            <Typography>\n              {product.price} {product.currency}\n            </Typography>\n\n            <Link to={`/product/${product.id}`}>\n              <Button size=\"small\" color=\"primary\">\n                View\n              </Button>\n            </Link>\n\n            <Button onClick={this.buyProduct} size=\"small\" color=\"primary\">\n              Buy\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\nProductsList.propTypes = {\n  product: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  addToCart: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ProductsList);\n","import {\n  ADD_TO_CART,\n  REMOVE_FROM_CART,\n  REMOVE_ONE_FROM_CART,\n} from \"./actionsType\";\n\nexport const addToCart = product => ({\n  type: ADD_TO_CART,\n  payload: product\n});\n\nexport const removeFromCart = product => ({\n  type: REMOVE_FROM_CART,\n  payload: product\n});\n\nexport const removeOneFromCart = product => ({\n  type: REMOVE_ONE_FROM_CART,\n  payload: product\n});\n\n\n","import { connect } from \"react-redux\";\n\nimport ProductListItem from \"./ProductListItem\";\nimport { addToCart } from \"../../redux/actions/cart\";\n\n\nconst mapDispatchToProps = dispatch => ({\n  addToCart: product => dispatch(addToCart(product))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(ProductListItem);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport ProductsListItem from \"./ProductListItemContainer\";\n\nconst styles = theme => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  cardGrid: {\n    padding: `${theme.spacing.unit * 8}px 0`\n  },\n  margin: {\n    display: \"block\",\n    margin: `10px auto`\n  }\n});\n\nclass ProductsList extends React.Component {\n  componentDidMount = () => {\n    if (this.props.products.length === 0) {\n      this.loadProducts();\n    }\n  };\n\n  loadProducts = () => {\n    const { page, limit } = this.props;\n    this.props.loadProducts(page, limit);\n  };\n\n  render() {\n    const { classes, products, totalProducts } = this.props;\n    return (\n      <div className={classNames(classes.layout, classes.cardGrid)}>\n        <Grid container spacing={40}>\n          {products.map(product => (\n            <ProductsListItem key={product.id} product={product} />\n          ))}\n        </Grid>\n\n        <Button\n          onClick={this.loadProducts}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.margin}\n          disabled={(products.length === totalProducts)}\n        >\n          Add Products\n        </Button>\n      </div>\n    );\n  }\n}\n\nProductsList.propTypes = {\n  products: PropTypes.array.isRequired,\n  page: PropTypes.number.isRequired,\n  limit: PropTypes.number.isRequired,\n  totalProducts: PropTypes.number.isRequired,\n  classes: PropTypes.object.isRequired,\n  loadProducts: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ProductsList);\n","import {\n  FETCH_RPODUCTS_SUCCESSFUL,\n  SET_TOTAL_PRODUCTS,\n  SET_PAGE,\n  FETCH_RPODUCT_BY_ID\n} from \"./actionsType\";\nimport { errorFetch } from \"./errors\";\n\nexport const addProducts = products => {\n  return {\n    type: FETCH_RPODUCTS_SUCCESSFUL,\n    payload: products\n  };\n};\n\nexport const setPage = page => {\n  return {\n    type: SET_PAGE,\n    payload: page\n  };\n};\n\nexport const setTotalProducts = totalProducts => {\n  return {\n    type: SET_TOTAL_PRODUCTS,\n    payload: totalProducts\n  };\n};\n\nexport const addProduct = product => {\n  return {\n    type: FETCH_RPODUCT_BY_ID,\n    payload: product\n  };\n};\n\nexport const fetchProductsList = (page, limit) => {\n  return dispatch => {\n    return fetch(\n      `http://localhost:3005/api/products?_page=${page}&&_limit=${limit}`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response;\n      })\n      .then(response => {\n        dispatch(setTotalProducts(response.headers.get(\"x-total-count\")));\n        return response.json();\n      })\n      .then(response => {\n        dispatch(addProducts(response));\n        dispatch(setPage(page + 1));\n      })\n      .catch(error => {\n        dispatch(errorFetch(error.message));\n      });\n  };\n};\n\nexport const showProduct = id => {\n  return (dispatch, getState) => {\n    const state = getState();\n    const product = state.products.productsList.find(\n      product => product.id === id\n    );\n    if (product) {\n      dispatch(addProduct(product));\n      return;\n    }\n    dispatch(fetchProductById(id));\n  };\n};\n\nconst fetchProductById = id => {\n  return dispatch => {\n    return fetch(`http://localhost:3005/api/product/${id}`)\n      .then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response;\n      })\n      .then(response => response.json())\n      .then(response => {\n        dispatch(addProduct(response));\n      })\n      .catch(error => {\n        dispatch(errorFetch(error.message));\n      });\n  };\n};\n","import { connect } from \"react-redux\";\n\nimport ProductList from \"./ProductsList\";\nimport { fetchProductsList } from \"../../redux/actions/products\";\n\nconst mapStateToProps = state => ({\n  products: state.products.productsList,\n  page: state.products.page,\n  limit: state.products.limit,\n  totalProducts: state.products.totalProducts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadProducts: (page, limit) => dispatch(fetchProductsList(page, limit))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ProductList);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = theme => ({\n  root: {\n    padding: \"40px 0\",\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    margin: \"auto\",\n    maxWidth: 900\n  },\n  image: {},\n  img: {\n    margin: \"auto\",\n    display: \"block\"\n  }\n});\n\nclass Product extends Component {\n  componentDidMount = () => {\n    this.props.showProduct(this.props.match.params.itemId);\n  };\n\n  buyProduct = () => {\n    this.props.addToCart(this.props.product);\n  };\n\n  render() {\n    const { classes, product } = this.props;\n    return product.id ? (\n      <div className={classes.root}>\n        <Paper className={classes.paper}>\n          <Grid container spacing={16}>\n            <ButtonBase className={classes.image}>\n              <img className={classes.img} alt=\"complex\" src={product.img} />\n            </ButtonBase>\n\n            <Grid item xs={12} sm container>\n              <Grid item xs container direction=\"column\" spacing={16}>\n                <Grid item xs>\n                  <Typography gutterBottom variant=\"h4\">\n                    {product.author}\n                  </Typography>\n\n                  <Typography gutterBottom variant=\"subtitle1\">\n                    {product.title}\n                  </Typography>\n\n                  <Typography gutterBottom>{product.desc}</Typography>\n\n                  <Typography color=\"textSecondary\">\n                    ID: {product.id}\n                  </Typography>\n                </Grid>\n                <CardActions>\n                  <Link to={`/products`}>\n                    <Button size=\"small\" color=\"primary\">\n                      Return\n                    </Button>\n                  </Link>\n\n                  <Button\n                    id=\"add-product\"\n                    onClick={this.buyProduct}\n                    size=\"small\"\n                    color=\"primary\"\n                  >\n                    Add to Cart\n                  </Button>\n                </CardActions>\n              </Grid>\n\n              <Grid item>\n                <Typography variant=\"subtitle1\">\n                  {product.currency} {product.price}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    ) : (\n      <Grid container spacing={16}>\n        <Link to={`/products`}>\n          <Button size=\"small\" color=\"primary\">\n            Return\n          </Button>\n        </Link>\n      </Grid>\n    );\n  }\n}\n\nProduct.propTypes = {\n  classes: PropTypes.object.isRequired,\n  product: PropTypes.object.isRequired,\n  showProduct: PropTypes.func.isRequired,\n  addToCart: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(Product);\n","import { connect } from \"react-redux\";\n\nimport Product from \"./Product\";\nimport { showProduct } from \"../../redux/actions/products\";\nimport { addToCart } from \"../../redux/actions/cart\";\n\nconst mapStateToProps = state => ({\n  product: state.products.product,\n});\n\nconst mapDispatchToProps = {\n  showProduct,\n  addToCart,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Product);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Button from \"@material-ui/core/Button\";\n\nconst styles = () => ({\n  image: {\n    width: 100,\n    height: 142\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\"\n  }\n});\n\nexport class CartProductsItem extends Component {\n  addToCart = () => {\n    this.props.addToCart(this.props.product);\n  };\n\n  removeFromCart = () => {\n    this.props.removeFromCart(this.props.product);\n  };\n\n  removeOneProduct = () => {\n    this.props.removeOneFromCart(this.props.product);\n  };\n\n  render() {\n    const { classes, product, count } = this.props;\n\n    return (\n      <Grid container spacing={16}>\n        <Grid item>\n          <ButtonBase className={classes.image}>\n            <img className={classes.img} alt=\"complex\" src={product.img} />\n          </ButtonBase>\n        </Grid>\n\n        <Grid item xs={12} sm container>\n          <Grid item xs container direction=\"column\" spacing={16}>\n            <Grid item xs>\n              <Typography gutterBottom variant=\"subtitle1\">\n                {product.author}\n              </Typography>\n\n              <Typography gutterBottom>\n              <div>\n                <p>\n{product.title}\n                </p>\n              </div>\n              </Typography>\n\n              <Typography color=\"textSecondary\">id: {product.id}</Typography>\n            </Grid>\n\n            <Grid item container direction=\"row\">\n              <Button\n                onClick={this.removeOneProduct}\n                size=\"small\"\n                color=\"primary\"\n              >\n                -\n              </Button>\n\n              <Typography variant=\"subtitle1\">{count}</Typography>\n\n              <Button onClick={this.addToCart} size=\"small\" color=\"primary\">\n                +\n              </Button>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button onClick={this.removeFromCart} size=\"small\" color=\"primary\">\n              remove;\n            </Button>\n\n            <Typography variant=\"subtitle1\">\n              {product.price * count} {product.currency}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nCartProductsItem.propTypes = {\n  addToCart: PropTypes.func.isRequired,\n  removeFromCart: PropTypes.func.isRequired,\n  removeOneFromCart: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(CartProductsItem);\n","import { connect } from \"react-redux\";\n\nimport CartProductsItem from \"./CartProductsItem\";\nimport {\n  addToCart,\n  removeFromCart,\n  removeOneFromCart\n} from \"../../redux/actions/cart\";\n\nconst mapDispatchToProps = {\n  addToCart,\n  removeFromCart,\n  removeOneFromCart\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CartProductsItem);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CartProductsItem from \"./CartProductsItemContainer\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    padding: \"50px 0\"\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    margin: \"auto\",\n    maxWidth: 800\n  }\n});\n\nexport class CartProducts extends Component {\n  render() {\n    const { classes, productsInCart, totalAmount } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {productsInCart.length === 0 ? (\n          <Typography align=\"center\" variant=\"body1\">\n            The Cart is empty\n          </Typography>\n        ) : (\n          <Paper id=\"cart-list\" className={classes.paper}>\n            {productsInCart.map(({ product, count }) => (\n              <CartProductsItem\n                key={product.id}\n                product={product}\n                count={count}\n              />\n            ))}\n\n            <Typography align=\"right\" variant=\"body1\">\n              Total amount: {totalAmount} UAH\n            </Typography>\n          </Paper>\n        )}\n      </div>\n    );\n  }\n}\n\nCartProducts.propTypes = {\n  classes: PropTypes.object.isRequired,\n  productsInCart: PropTypes.array.isRequired,\n  totalAmount: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(CartProducts);\n","import { connect } from \"react-redux\";\n\nimport CartProducts from \"./CartProducts\";\nimport { totalAmountCartProducts } from \"../../reselectors/cartProducts\";\n\nconst mapStateToProps = state => ({\n  productsInCart: state.cart.productsInCart,\n  totalAmount: totalAmountCartProducts(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CartProducts);\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ProductsList from \"./ProductList/ProductsListContainer\";\nimport Product from \"./Product/ProductContainer\";\nimport CartProducts from \"./CartProducts/CartProductsContainer\";\n\nconst notFound = () => <h1>Not Found</h1>;\n\nclass Router extends Component {\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/products\" component={ProductsList} />\n        <Route path=\"/product/:itemId\" component={Product} />\n        <Route path=\"/cart\" component={CartProducts} />\n        <Route component={notFound} />\n      </Switch>\n    );\n  }\n}\n\nexport default Router;\n","import React, { Component } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport theme from \"./ThemeContainer\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\nimport storeCreator from \"./redux/store\";\nimport Layout from \"./routes/Layout/Layout\";\nimport Routes from \"./routes/Routes\";\nimport \"./App.css\";\n\nconst store = storeCreator();\n\nexport default class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <MuiThemeProvider theme={theme}>\n          <Provider store={store}>\n            <Layout>\n              <Routes />\n            </Layout>\n          </Provider>\n        </MuiThemeProvider>\n      </BrowserRouter>\n    );\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducers\";\n\nexport default () =>\n  createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}